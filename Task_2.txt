Обидві атаки використовуються у веб-додатку та обидві мають ціль отримати конфіденційні данні користувача або системи.

Причина виникнення:
XSS Injection: Відсутні методи фільтрації та екранування вхідних даних що використовуються як частина HTML або JS коду.
SQL Injection: Injection: Також відсутні методи фільтрації та екранування вхідних даних які використовуються під час створення запитів до бази даних MySQL.

Методи усунення:
XSS Injection: Щоб захиститися від XSS, та SQL Injection потрібно правильно екранувати або фільтрувати всі вхідні дані, які використовуються у HTML-сторінках JS-коді зверненнях до баз даних MySQL,як приклад в HTML це htmlspecialchars, JS - encodeURIComponent, MySQL - заборона використання або екранування спецсимволів.
В MySQL також необхідно створювати патерни де будуть перевірятись та фільтруватись всі символи які передаються від клієнта до серверу, динамічно не використовувати дані що передаються від клієнта в SQL-запиті, а використовувати їх як параметри.

Цiль:
XSS Injection: Атака направлена на користувачів веб-застосунку, які його переглядають з метою виявлення їх конфеденційної інформації.
SQL Injection: Атака направлена на базу даних, що використовуєтся додатком і метою є отримання доступу до баз/таблиць/інших даних з метою розкриття конфеденційної інформації.
